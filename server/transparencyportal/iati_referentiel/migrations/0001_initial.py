# Generated by Django 4.1.4 on 2023-01-03 00:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CollaborationType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "verbose_name": "Type Collaboration",
                "verbose_name_plural": "Type Collaborations",
            },
        ),
        migrations.CreateModel(
            name="Condition",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("attached", models.BooleanField()),
                (
                    "condition",
                    models.CharField(
                        blank=True, db_column="Condition", max_length=255, null=True
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Policy", "Policy"),
                            ("Performance", "Performance"),
                            ("Fiduciary", "Fiduciary"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Condition",
                "verbose_name_plural": "Conditions",
            },
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Nom"
                    ),
                ),
                ("discriminator", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Pays",
                "verbose_name_plural": "Pays",
            },
        ),
        migrations.CreateModel(
            name="DefaultAidType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "verbose_name": "Type aide",
                "verbose_name_plural": "Type aides",
            },
        ),
        migrations.CreateModel(
            name="DefaultFinanceType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "verbose_name": "Type Financement",
                "verbose_name_plural": "Type Financements",
            },
        ),
        migrations.CreateModel(
            name="HumanitarianScope",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "verbose_name": "Portée humanitaire",
                "verbose_name_plural": "Portée humanitaires",
            },
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ref", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Government", "Government"),
                            ("Local Government", "Local Government"),
                            ("Other Public Sector", "Other Public Sector"),
                            ("International NGO", "International NGO"),
                            ("National NGO", "National NGO"),
                            ("Regional NGO", "Regional NGO"),
                            ("Partner Country based NGO", "Partner Country based NGO"),
                            (
                                "Public Private Partnership",
                                "Public Private Partnership",
                            ),
                            ("Multilateral", "Multilateral"),
                            ("Foundation", "Foundation"),
                            ("Private Sector", "Private Sector"),
                            (
                                "Private Sector in Provider Country",
                                "Private Sector in Provider Country",
                            ),
                            (
                                "Private Sector in Aid Recipient Country",
                                "Private Sector in Aid Recipient Country",
                            ),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("narrative", models.CharField(blank=True, max_length=255, null=True)),
                ("discriminator", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Organisme",
                "verbose_name_plural": "Organismes",
            },
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("continent", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Nom"
                    ),
                ),
                ("discriminator", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Région",
                "verbose_name_plural": "Régions",
            },
        ),
        migrations.CreateModel(
            name="Sector",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(blank=True, max_length=255, null=True)),
                ("percentage", models.FloatField(verbose_name="Pourcentage")),
                ("narrative", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "verbose_name": "Secteur",
                "verbose_name_plural": "Secteurs",
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(blank=True, max_length=255, null=True)),
                ("narrative", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "verbose_name": "Etiquette",
                "verbose_name_plural": "Etiquettes",
            },
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ref",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Réference"
                    ),
                ),
                (
                    "location_reach",
                    models.CharField(
                        blank=True,
                        db_column="Location-reach",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("code", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Nom"
                    ),
                ),
                (
                    "description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("hierarchy", models.IntegerField(verbose_name="Hiérachie")),
                (
                    "activity_location",
                    models.CharField(
                        blank=True,
                        db_column="Activity-location",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "administrative_code",
                    models.IntegerField(
                        blank=True,
                        db_column="Administrative-code",
                        null=True,
                        verbose_name="Code Administratif",
                    ),
                ),
                (
                    "administrative_level",
                    models.CharField(
                        blank=True,
                        db_column="Administrative-level",
                        max_length=255,
                        null=True,
                        verbose_name="Niveau Administratif",
                    ),
                ),
                ("pos", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "location_class",
                    models.CharField(
                        blank=True,
                        db_column="Location-class",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "countryid3",
                    models.ForeignKey(
                        db_column="countryid3",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="iati_referentiel.country",
                        verbose_name="Pays",
                    ),
                ),
                (
                    "locationid",
                    models.ForeignKey(
                        blank=True,
                        db_column="locationid",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="iati_referentiel.location",
                        verbose_name="Localite Parente",
                    ),
                ),
            ],
            options={
                "verbose_name": "Localité",
                "verbose_name_plural": "Localités",
            },
        ),
        migrations.AddField(
            model_name="country",
            name="regionid",
            field=models.ForeignKey(
                db_column="regionid",
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="iati_referentiel.region",
                verbose_name="Région",
            ),
        ),
    ]
